{"version":3,"sources":["components/ContactList/contactList.module.css","components/Filter/filter.module.css","redux/contacts/contacts-action.js","service/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","components/Form/Form.js","components/ContactList/СontactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/form.module.css"],"names":["module","exports","actions","addContact","createAction","payload","id","name","number","deleteContact","changeFilter","fetchContacts","a","axios","get","data","postContacts","contact","post","deleteContacts","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","console","log","getContacts","state","getFilter","filter","Form","option","useState","setName","setNumber","dispatch","useDispatch","inputId","uuidv4","handleChange","evt","currentTarget","value","onSubmit","preventDefault","newContact","contactActions","contactsOperations","autoComplete","className","styles","phoneBookForm","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","ContactList","useSelector","contactsSelectors","items","list","filteredContacts","useEffect","map","listItem","contactName","contactBtn","onClick","normalizedFilter","toLowerCase","includes","Filter","filterLabel","filterInput","e","App","createReducer","fulfilled","_","action","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdf464cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__1BwnE\",\"listItem\":\"contactList_listItem__24IOx\",\"contactName\":\"contactList_contactName__3fLwQ\",\"contactBtn\":\"contactList_contactBtn__3n84c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__xI8D0\",\"filterInput\":\"filter_filterInput__1CyIJ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ id, name, number }) => ({\r\n  payload: {\r\n    id,\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n\r\nexport default actions;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function postContacts(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from '../../service/contacts-api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'user/fetchContacts',\r\n  async () => {\r\n    const contacts = await contactsAPI.fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const postContacts = createAsyncThunk(\r\n  'user/postContacts',\r\n  async (contact) => {\r\n    try {\r\n      const data = await contactsAPI.postContacts(contact);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'user/deleteContacts',\r\n  async (contactId) => {\r\n    try {\r\n      const data = await contactsAPI.deleteContacts(contactId);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n","export const getContacts = (state) => state.contacts;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contacts-action';\r\nimport { contactsOperations } from '../../redux';\r\nimport styles from './form.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Form({ option }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const inputId = uuidv4();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const id = uuidv4();\r\n    const newContact = { id, name, number };\r\n\r\n    dispatch(contactActions.addContact(newContact));\r\n    dispatch(contactsOperations.postContacts(newContact));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>{option}</h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        autoComplete=\"off\"\r\n        className={styles.phoneBookForm}\r\n      >\r\n        <label htmlFor={inputId} className={styles.formLabel}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter full name\"\r\n          id={inputId}\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n          required\r\n        />\r\n        <label htmlFor={inputId} className={styles.formLabel}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter number\"\r\n          id={inputId}\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"The phone number must be digits and can contain spaces, dashes and should start with +\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className={styles.formBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux';\r\nimport actions from '../../redux/contacts/contacts-action';\r\nimport styles from './contactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const { items, filter } = useSelector(contactsSelectors.getContacts);\r\n  const list = filteredContacts(items, filter);\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.list}>\r\n        {list.map(({ number, name, id }) => (\r\n          <li key={number} className={styles.listItem}>\r\n            <p className={styles.contactName}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={styles.contactBtn}\r\n              onClick={() => {\r\n                dispatch(contactsOperations.deleteContacts(id));\r\n                dispatch(actions.deleteContact(number));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nconst filteredContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors } from '../../redux';\r\nimport actions from '../../redux/contacts/contacts-action';\r\nimport styles from './filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label htmlFor=\"filter\" className={styles.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\r\n        id=\"filter\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import Form from './components/Form/Form';\nimport ContactsList from './components/ContactList/СontactList';\nimport Filter from './components/Filter/Filter';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Phonebook</h1>\n      </header>\n      <Form />\n      <div>\n        <h2>CONTACTS</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { fetchContacts } from './contacts-operations';\r\nimport actions from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ number }) => number !== payload),\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => true,\r\n  [fetchContacts.rejected]: () => true,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middlware = (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }).concat(logger);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middlware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"form_phoneBookForm__2lCky\",\"formLabel\":\"form_formLabel__ESD1J\",\"formInput\":\"form_formInput__mtNi6\",\"formBtn\":\"form_formBtn__1t1J7\"};"],"sourceRoot":""}