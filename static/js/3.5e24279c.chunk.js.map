{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Form/Form.js","components/ContactList/Ð¡ontactList.js","components/Filter/Filter.js","views/PhonebookView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","Form","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","useAddContactMutation","addContact","isLoading","contacts","useFetchContactsQuery","data","handleChange","e","target","reset","className","onSubmit","preventDefault","find","contact","toast","success","alert","htmlFor","type","pattern","title","required","onChange","disabled","ContactList","isFetching","useDeleteContactMutation","deleteContact","onDeleteContact","contactId","a","unwrap","map","id","onClick","Filter","filter","currentTarget","PhonebookView","setContacts","isLoggedIn","useSelector","authSelectors","useEffect","normalizedFilter","includes"],"mappings":"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","file":"static/js/3.5e24279c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useState } from 'react';\r\nimport { toast, Toaster } from 'react-hot-toast';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  useAddContactMutation,\r\n  useFetchContactsQuery,\r\n} from '../../redux/contacts/contacts-slice';\r\nimport './Form.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n  const { data: contacts } = useFetchContactsQuery();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const found = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    if (found === undefined) {\r\n      addContact({ name, number });\r\n      toast.success('Contact added');\r\n      reset();\r\n    } else {\r\n      alert(`${name} is already in the Contact List`);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"submit__form\" onSubmit={handleSubmit}>\r\n        <label htmlFor={nameInputId}>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\r\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc. \"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor={numberInputId}>\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className=\"submit__btn\" type=\"submit\" disabled={isLoading}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <div>\r\n        <Toaster />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { toast, Toaster } from 'react-hot-toast';\r\nimport { useDeleteContactMutation } from '../../redux/contacts/contacts-slice';\r\nimport './ContactList.css';\r\n\r\nconst ContactList = ({ contacts, isFetching }) => {\r\n  const [deleteContact] = useDeleteContactMutation();\r\n  const onDeleteContact = async (contactId) => {\r\n    await deleteContact(contactId).unwrap();\r\n    toast.success('Contact deleted');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? (\r\n        <h1>Waiting...</h1>\r\n      ) : (\r\n        <div>\r\n          {contacts && (\r\n            <ul className=\"contacts__list\">\r\n              {contacts.map(({ name, number, id }) => (\r\n                <li className=\"contacts__item\" key={id}>\r\n                  <p className=\"contacts__name\">{name}</p>\r\n                  <p className=\"contacts__number\">{number}</p>\r\n                  <button\r\n                    className=\"contacts__btn\"\r\n                    onClick={() => onDeleteContact(id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n          <div>\r\n            <Toaster />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","export default function Filter({ filter }) {\r\n  const handleChange = (e) => {\r\n    filter(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <label className=\"filter\">\r\n      <h3>Find contacts by name</h3>\r\n      <input type=\"text\" onChange={handleChange}></input>\r\n    </label>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchContactsQuery } from '../redux/contacts/contacts-slice';\r\nimport * as authSelectors from '../redux/auth/selectors';\r\nimport Form from '../components/Form/Form';\r\nimport ContactList from '../components/ContactList/Ð¡ontactList';\r\nimport Filter from '../components/Filter/Filter';\r\n\r\nexport default function PhonebookView() {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setContacts(data);\r\n    }\r\n  }, [data]);\r\n\r\n  const onFilterContacts = (filter) => {\r\n    if (filter) {\r\n      const normalizedFilter = filter.toLowerCase();\r\n\r\n      return setContacts(\r\n        contacts.filter((contact) =>\r\n          contact.name.toLowerCase().includes(normalizedFilter)\r\n        )\r\n      );\r\n    } else {\r\n      setContacts(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <div className=\"phonebook\">\r\n          <section className=\"addNew\">\r\n            <Form />\r\n          </section>\r\n\r\n          <section className=\"contacts\">\r\n            <h2 className=\"contacts__title\">Contacts</h2>\r\n            <Filter filter={onFilterContacts} />\r\n            <ContactList contacts={contacts} isFetching={isFetching} />\r\n          </section>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>Please login to access to your phonebook</h1>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}